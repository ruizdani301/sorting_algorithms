#include <stdio.h>
#include <stdlib.h>
#include "sort.h"

/**
 * bubble_sort - check the code
 * @list:variable
 * Return: Always.
 */

void insertion_sort_list(listint_t **list)
{
	/*se debe reemplazar los valores*/
    listint_t tmp = header = h_2;
    unsigned int contmp, conth;

    /**quiere decir que solo hay un elemento*/
    if (tmp->next = NULL)
    {
		printf(header);
		break;
	}
	/** falta acomodar los elementos del for*/
	for (tmp, tmp->next !=) NULL; tmp->next)
	{
		h_2 = tmp;
		cont ++;
		conth = cont;
		while (h_2->n < h_2->prev->n)
		{
			/** Se hace el swap*/
			h_2->prev->next = h_2->next;
			h_2->next = h_2->prev;
			h_2->prev = h_2->prev->prev;
			h_2->prev->prev->next = h_2,
			h_2->next->next->prev = h_2->next;
			h_2->next->prev = h_2
			conth--;
			printf(header);/**header es la **list*/
			if (conth == 0)
			{
				break;
			}
			continue;

				printf(header)
		}
	}
}
/* el q tengo en python tutor*/
#include <stdio.h>
#include <stdlib.h>

typedef struct listint_s
{
    const int n;
    struct listint_s *prev;
    struct listint_s *next;
} listint_t;
void print_list(const listint_t *list)
{
    int i;

    i = 0;
    while (list)
    {
        if (i > 0)
            printf(", ");
        printf("%d", list->n);
        ++i;
        list = list->next;
    }
    printf("\n");
}
listint_t *create_listint(const int *array, size_t size)
{
    listint_t *list;
    listint_t *node;
    int *tmp;

    list = NULL;
    while (size--)
    {
        node = malloc(sizeof(*node));
        if (!node)
            return (NULL);
        tmp = (int *)&node->n;
        *tmp = array[size];
        node->next = list;
        node->prev = NULL;
        list = node;
        if (list->next)
            list->next->prev = list;
    }
    return (list);
}
void insertion_sort_list(listint_t **list)
{

    listint_t *h_2 = NULL, *tmp = NULL;
    unsigned int cont = 0;
    unsigned int conth = 0;

    /**quiere decir que solo hay un elemento*/
    /**if (h_2->next == NULL)
    {
        return;
    }*/
    h_2 = *list;
    tmp = *list;
    /*for (tmp = *list; tmp->next != NULL; tmp = tmp->next)*/
    while (tmp != NULL) /*tmp != NULL*/
    {
        tmp = tmp->next;
        if (tmp->next == NULL)/*validar si esta linea es posible*/
            {
                tmp = tmp->prev;
                cont = cont - 1;
            }
        h_2 = tmp;
        cont = cont + 1;
        conth = cont;
        while (h_2->n < h_2->prev->n)
        {
          if (conth == 1)
            {
              h_2->prev->next = h_2->next;
              h_2->prev->prev = h_2;
              h_2->next->prev = h_2->prev;
              h_2->next = h_2->prev;
              h_2->prev = NULL;
              *list = (*list)->prev;
              conth--;
              print_list(*list);
            }

          else if (h_2->next == NULL)
           {
             h_2->next = h2->prev;
             h_2->prev->next = NULL;
             h_2->prev = h2->prev->prev;
             h_2->prev->prev->next = h_2;
             conth--;
             print_list(*list);
            }
          else if (conth >= 1 && h_2->next != NULL)
            {
              /** Se hace el swap*/
            h_2->prev->next = h_2->next;
            h_2->next = h_2->prev;
            h_2->prev = h_2->prev->prev;
            h_2->prev->next = h_2;
            h_2->next->next->prev = h_2->next;
            h_2->next->prev = h_2;
            conth--;
            print_list(*list);/**header es la **list*/
            }
            if (tmp == h_2)
            {
              tmp = tmp-> next;
            }
            if (conth == 0)
              break;
        }
    }
    return;
}
int main(void)
{
    listint_t *list;
    int array[] = {19, 48, 71, 13, 7};
    size_t n = sizeof(array) / sizeof(array[0]);

    list = create_listint(array, n);
    if (!list)
        return (1);
    print_list(list);
    printf("\n");
    insertion_sort_list(&list);
    printf("\n");
    print_list(list);
    return (0);
}